name: Auto Capture Knowledge
on:
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR番号（テスト用）'
        required: true
        type: number

jobs:
  capture-lessons:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
      actions: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create knowledge update branch
        run: |
          BRANCH_NAME="auto/knowledge-update-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b $BRANCH_NAME

      - name: Extract knowledge with Claude Code Action
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          direct_prompt: |
            このPR #${{ github.event.pull_request.number || github.event.inputs.pr_number }} から学習可能な知識を抽出して、以下のファイルを更新してください：

            ## 📝 更新するファイル

            ### 1. .kiro/steering/patterns.md
            このPRで使用された実装パターン、ベストプラクティス、再利用可能なコード構造を既存の内容に追加してください。

            ### 2. .kiro/steering/challenges.md
            このPRで直面した課題、解決方法、今後の予防策を既存の内容に追加してください。

            ### 3. .kiro/steering/lessons.md
            このPRから学んだ重要な教訓、将来への提言、チームで共有すべき知見を既存の内容に追加してください。

            ## 📋 要件
            - 既存の内容は保持し、新しいセクションを追加
            - PR番号と日付を含むセクション見出し
            - 具体的で実用的な内容
            - 今後の開発に役立つ技術的洞察を含める

            よろしくお願いします！

      - name: Check for changes
        id: check-changes
        run: |
          git add .
          if git diff --cached --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No knowledge updates needed"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Knowledge updates detected"
          fi

      - name: Commit knowledge updates
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          git commit -m "📚 Auto-capture lessons from PR #$PR_NUMBER

          Automated knowledge update from merged pull request.

          PR Title: $(cat pr_info.json | jq -r '.title')
          Changed Files: $(cat changed_files.txt | tr '\n' ' ')
          "

      - name: Push knowledge update branch
        if: steps.check-changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # GitHub Actionsの認証を使用してpush
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin $BRANCH_NAME
          echo "BRANCH_PUSHED=true" >> $GITHUB_OUTPUT
          echo "PR_URL=https://github.com/${{ github.repository }}/pull/new/$BRANCH_NAME" >> $GITHUB_OUTPUT


      - name: Summary
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          echo "## 📚 Knowledge Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Branch created: \`$BRANCH_NAME\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📝 An issue has been created with instructions to create a Pull Request." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Issues](https://github.com/${{ github.repository }}/issues)" >> $GITHUB_STEP_SUMMARY
