name: Auto Capture Knowledge
on:
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR番号（テスト用）'
        required: true
        type: number

jobs:
  capture-lessons:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create knowledge update branch
        run: |
          BRANCH_NAME="auto/knowledge-update-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b $BRANCH_NAME

      - name: Analyze PR changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 変更されたファイルを分析
          PR_NUMBER=${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          gh pr view $PR_NUMBER --json files --jq '.files[].path' > changed_files.txt
          gh pr view $PR_NUMBER --json title,body,labels --jq . > pr_info.json
          echo "Analyzing changes from PR #$PR_NUMBER"

      - name: Capture lessons with Claude Code
        run: |
          # Claude Codeを使用して知識を抽出・更新
          # このステップは実際のClaude Code環境で動作
          echo "Running Claude Code knowledge capture..."

          # 一時的にマニュアル更新として設定
          # 実際の実装時はclaude-codeコマンドに置き換え
          PR_NUMBER=${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          echo "PR #$PR_NUMBER の知識抽出が必要です" >> .kiro/steering/knowledge-update-queue.txt

      - name: Check for changes
        id: check-changes
        run: |
          git add .
          if git diff --cached --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No knowledge updates needed"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Knowledge updates detected"
          fi

      - name: Commit knowledge updates
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          git commit -m "📚 Auto-capture lessons from PR #$PR_NUMBER

          Automated knowledge update from merged pull request.

          PR Title: $(cat pr_info.json | jq -r '.title')
          Changed Files: $(cat changed_files.txt | tr '\n' ' ')
          "

      - name: Push knowledge update branch
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git push origin $BRANCH_NAME
          echo "BRANCH_PUSHED=true" >> $GITHUB_OUTPUT
          echo "PR_URL=https://github.com/${{ github.repository }}/pull/new/$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Create notification issue
        if: steps.check-changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          PR_URL="https://github.com/${{ github.repository }}/pull/new/$BRANCH_NAME"
          
          gh issue create \
            --title "📚 [Action Required] Knowledge update from PR #${PR_NUMBER}" \
            --body "$(cat << 'EOF'
          ## 📚 知識更新ブランチが作成されました

          PR #${{ github.event.pull_request.number || github.event.inputs.pr_number }} から自動抽出された実装経験を記録するブランチを作成しました。

          ### 🔗 Pull Requestを作成してください
          
          以下のリンクをクリックしてPull Requestを作成してください：
          
          **[→ Pull Requestを作成]($PR_URL)**

          ### 📝 更新内容
          - 実装パターンの抽出
          - 課題と解決策の記録  
          - 再利用可能コンポーネントの特定

          ### ℹ️ 情報
          - 🌿 ブランチ: `$BRANCH_NAME`
          - 🤖 自動生成: Claude Knowledge Bot
          - 📅 作成日時: $(date '+%Y-%m-%d %H:%M:%S')
          - 🔗 元PR: #${{ github.event.pull_request.number || github.event.inputs.pr_number }}

          このIssueはPRが作成されたら閉じてください。
          EOF
          )"

      - name: Summary
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          echo "## 📚 Knowledge Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Branch created: \`$BRANCH_NAME\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📝 An issue has been created with instructions to create a Pull Request." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Issues](https://github.com/${{ github.repository }}/issues)" >> $GITHUB_STEP_SUMMARY
